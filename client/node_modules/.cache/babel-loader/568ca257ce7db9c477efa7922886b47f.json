{"ast":null,"code":"import _regeneratorRuntime from \"/etc/opt/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport history from \"../history\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var userId, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userId = getState().auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', _objectSpread({}, formValues, {\n                  userId: userId\n                }));\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n                history.push();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                response = _context2.sent;\n                //console.log(response.data);\n                dispatch({\n                  type: FETCH_STREAMS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.put(\"/streams/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: EDIT_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.delete(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_STREAM,\n                  payload: id\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/etc/opt/streams/client/src/actions/index.js"],"names":["streams","history","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","response","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"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","sourcesContent":["import streams from '../apis/streams';\nimport history from \"../history\"\nimport {\n  SIGN_IN,\n  SIGN_OUT,\n  CREATE_STREAM,\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  DELETE_STREAM,\n  EDIT_STREAM\n} from './types';\n\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload:userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\n\nexport const createStream = formValues => async (dispatch,getState) => {\n  const {userId}  = getState().auth;\n  const response  = await streams.post('/streams',{...formValues,userId});\n  dispatch({type: CREATE_STREAM,payload:response.data})\n  history.push()\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response  = await streams.get('/streams');\n  //console.log(response.data);\n  dispatch({type: FETCH_STREAMS,payload:response.data})\n};\n\nexport const fetchStream = id => async dispatch => {\n  const response  = await streams.get(`/streams/${id}`);\n  dispatch({type: FETCH_STREAM,payload:response.data})\n};\n\nexport const editStream = (id,formValues) => async dispatch => {\n  const response  = await streams.put(`/streams/${id}`,formValues);\n  dispatch({type: EDIT_STREAM,payload:response.data})\n};\n\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({type: DELETE_STREAM,payload:id})\n};"]},"metadata":{},"sourceType":"module"}