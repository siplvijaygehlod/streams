{"ast":null,"code":"import _classCallCheck from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\n/* reduxForm is the same function as we are using \ntill now using connect function and make sure that we \ncall some action creator and store data.\n\nField is a built-in react component to which \nwe are going to show on screen. */\n\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    _classCallCheck(this, StreamCreate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamCreate).apply(this, arguments));\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n/* reduxForm returns a functoin and we \nimmediately pass that function to class StreamCreate */\n\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["/etc/opt/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","Component","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;AAOA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IACMC,Y;;;;;;;;;;;;;6BACM;AACR,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAAR;AAID;;;;EANwBH,KAAK,CAACI,S;AAQjC;;;;AAEA,eAAeF,SAAS,CAAC;AACvBG,EAAAA,IAAI,EAAE;AADiB,CAAD,CAAT,CAEZF,YAFY,CAAf","sourcesContent":["import React from 'react'\n\n/* reduxForm is the same function as we are using \ntill now using connect function and make sure that we \ncall some action creator and store data.\n\nField is a built-in react component to which \nwe are going to show on screen. */\n\nimport { Field, reduxForm } from 'redux-form'\nclass StreamCreate extends React.Component {\n  render () {\n    return (<form>\n    {/*  */}\n              <Field />\n            </form>)\n  }\n}\n/* reduxForm returns a functoin and we \nimmediately pass that function to class StreamCreate */\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate)\n"]},"metadata":{},"sourceType":"module"}