{"ast":null,"code":"import _classCallCheck from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\n/* reduxForm is the same function as we are using \ntill now using connect function and make sure that we \ncall some action creator and store data.\n\nField is a built-in react component to which \nwe are going to show on screen. */\n\nimport { Field, reduxForm } from 'react-redux';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    _classCallCheck(this, StreamCreate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamCreate).apply(this, arguments));\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"StreamCreate\");\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n/* reduxForm returns a functoin and we \nimmediately pass that function to class StreamCreate */\n\n\nexport default reduxForm({\n  form: 'streamCreate'\n})(StreamCreate);","map":{"version":3,"sources":["/etc/opt/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","console","log","props","Component","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;;;;;;AAOA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,aAAjC;;IACMC,Y;;;;;;;;;;;;;6BACM;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAR;AAGD;;;;EANwBN,KAAK,CAACO,S;AAQjC;;;;AAEA,eAAeL,SAAS,CAAC;AACvBM,EAAAA,IAAI,EAAC;AADkB,CAAD,CAAT,CAEZL,YAFY,CAAf","sourcesContent":["import React from 'react'\n\n/* reduxForm is the same function as we are using \ntill now using connect function and make sure that we \ncall some action creator and store data.\n\nField is a built-in react component to which \nwe are going to show on screen. */\n\nimport { Field, reduxForm } from 'react-redux'\nclass StreamCreate extends React.Component {\n  render () {\n    console.log(this.props)\n    return (<div>\n             StreamCreate\n           </div>);\n  }\n}\n/* reduxForm returns a functoin and we \nimmediately pass that function to class StreamCreate */\nexport default reduxForm({\n  form:'streamCreate'\n})(StreamCreate)\n"]},"metadata":{},"sourceType":"module"}