{"ast":null,"code":"import _classCallCheck from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { fetchStream } from '../../actions';\nimport { connect } from 'react-redux';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow() {\n    _classCallCheck(this, StreamShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).apply(this, arguments));\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.s) return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"StreamShow\");\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/etc/opt/streams/client/src/components/streams/StreamShow.js"],"names":["React","fetchStream","connect","StreamShow","props","match","params","id","s","Component","mapStateToProps","state","ownProps","stream","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,U;;;;;;;;;;;;;wCACe;AACjB,WAAKC,KAAL,CAAWH,WAAX,CAAuB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAEO;AACN,UAAG,CAAC,KAAKH,KAAL,CAAWI,CAAf,EACA,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;;;EARsBR,KAAK,CAACS,S;;AAW/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,QAAP,EAAoB;AAC1C,SAAO;AACLC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADH,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACQ,eAAD,EAAiB;AAACT,EAAAA,WAAW,EAAXA;AAAD,CAAjB,CAAP,CAAuCE,UAAvC,CAAf","sourcesContent":["import React from 'react'\nimport { fetchStream } from '../../actions'\nimport { connect } from 'react-redux'\n\nclass StreamShow extends React.Component{\n  componentDidMount(){\n    this.props.fetchStream(this.props.match.params.id)\n  }\n\n  render(){\n    if(!this.props.s)\n    return <div>StreamShow</div>;\n  }\n}\n\nconst mapStateToProps = (state,ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  }\n}\n\nexport default connect(mapStateToProps,{fetchStream})(StreamShow);\n"]},"metadata":{},"sourceType":"module"}