{"ast":null,"code":"import _classCallCheck from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      console.log(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Loading....!!!!\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  edit: edit\n})(StreamEdit);","map":{"version":3,"sources":["/etc/opt/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamForm","StreamEdit","onSubmit","formValues","console","log","props","match","params","id","stream","Component","mapStateToProps","state","ownProps","streams","edit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,U;;;;;;;;;;;;;;;;;;UAKJC,Q,GAAW,UAAAC,UAAU,EAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,K;;;;;;;wCANkB;AACjB,WAAKG,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;;6BAKO;AACN,UAAG,CAAC,KAAKH,KAAL,CAAWI,MAAf,EAAsB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKR,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAnBsBL,KAAK,CAACc,S;;AAqB9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAOC,QAAP,EAAoB;AAC1C,SAAO;AACLJ,IAAAA,MAAM,EAACG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AADF,GAAP;AAGD,CAJD;;AAKD,eAAeX,OAAO,CAACc,eAAD,EAAiB;AAACb,EAAAA,WAAW,EAAXA,WAAD;AAAaiB,EAAAA,IAAI,EAAJA;AAAb,CAAjB,CAAP,CAA4Cf,UAA5C,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchStream} from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamEdit extends React.Component{\n  componentDidMount(){\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  onSubmit = formValues => {\n    console.log(formValues);\n  }\n  render(){\n    if(!this.props.stream){\n      return <div>Loading....!!!!</div>;\n    }\n\n    return (\n      <div>\n        <h3>Edit a Stream</h3>\n        <StreamForm onSubmit={this.onSubmit} />\n      </div>\n      )\n  }\n}\n const mapStateToProps = (state,ownProps) => {\n   return {\n     stream:state.streams[ownProps.match.params.id]\n   }\n }\nexport default connect(mapStateToProps,{fetchStream,edit})(StreamEdit);\n"]},"metadata":{},"sourceType":"module"}