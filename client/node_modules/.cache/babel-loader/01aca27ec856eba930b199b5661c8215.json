{"ast":null,"code":"import _classCallCheck from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/etc/opt/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/etc/opt/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.createStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Create a Stream\"), React.createElement(StreamForm, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"no title!!!\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"no description!!!\";\n  }\n\n  return errors;\n};\n/* reduxForm returns a function and we \nimmediately pass that function to class StreamCreate */\n\n\nvar formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream: createStream\n})(formWrapped);","map":{"version":3,"sources":["/etc/opt/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","onSubmit","formValues","props","Component","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAGJC,Q,GAAW,UAAAC,UAAU,EAAI;AACvB,YAAKC,KAAL,CAAWL,YAAX,CAAwBI,UAAxB;AACD,K;;;;;;;6BAES;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,EAEA,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKD,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADF;AAMD;;;;EAdwBL,KAAK,CAACQ,S;;AAiBjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAH,UAAU,EAAI;AAC7B,MAAMI,MAAM,GAAG,EAAf;;AACA,MAAG,CAACJ,UAAU,CAACK,KAAf,EAAqB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,aAAf;AACD;;AAED,MAAG,CAACL,UAAU,CAACM,WAAf,EAA2B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,mBAArB;AACD;;AACD,SAAOF,MAAP;AACD,CAVD;AAYA;;;;AAEA,IAAMG,WAAW,GAAKC,SAAS,CAAC;AAC9BC,EAAAA,IAAI,EAAE,cADwB;AAE9BN,EAAAA,QAAQ,EAARA;AAF8B,CAAD,CAAT,CAGnBL,YAHmB,CAAtB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAN,CAAP,CAA6BW,WAA7B,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux';\nimport {createStream}  from '../../actions'\nimport StreamForm from './StreamForm'\n\nclass StreamCreate extends React.Component {\n  \n\n  onSubmit = formValues => {\n    this.props.createStream(formValues);\n  }\n\n  render () {\n    return (\n      <div>\n      <h3>Create a Stream</h3>\n      <StreamForm onSubmit={this.onSubmit} />\n      </div>\n     )\n  }\n}\n\nconst validate = formValues => {\n  const errors = {};\n  if(!formValues.title){\n    errors.title = \"no title!!!\";\n  }\n\n  if(!formValues.description){\n    errors.description = \"no description!!!\";\n  }\n  return errors;\n};\n\n/* reduxForm returns a function and we \nimmediately pass that function to class StreamCreate */\nconst formWrapped =  (reduxForm({\n  form: 'streamCreate',\n  validate\n})(StreamCreate))\n\nexport default connect(null,{createStream})(formWrapped)"]},"metadata":{},"sourceType":"module"}